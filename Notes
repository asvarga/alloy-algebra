


* having types broke isomorphisms between groups of different types
	- maybe have each Group<T> be an extension of Group<Any>
		- each version of Group just gets different constraints on E
	- provide projection function from group type to type
		- see if list does this
	- maybe make a module for functional relations so they can be parameterized over (like with Sets)


- optimizations
	- only considering generator elements
		- describe graphs as {Elem -> Gen -> Elem} instead of {Elem -> Elem -> Elem}, for smaller relations
	- gruples: tuples representing a products of groups, ex: (Z/2Z)^8
	* product groups

- how can group theory be used to *help* Alloy?
	- have (proven) facts that say if a relation satisfies the group axioms -> it also satisfies xyz
	* hard-wire group-specific symmetry breaking, like in util/ordering
	* maybe just adding it as a fact will work?

* rings

- visualization
	- Build descriptive graphs from a group:
		- subgroup lattices
		- Cayley graphs, cycle graphs, etc
	- Might want to customize Alloy's viz
	- Maybe make external GUI to Alloy

- usage examples
	- State-transition puzzles like hamiltonian paths through group



